//pipeline{
//    agent any
//
//    tools{
//        maven 'M3'
////        jdk 'JDK21'
//    }
//    stages{
//        stage('Build'){
//            steps{
////                sh 'java -version'
////                sh 'mvn clean compile'
//                sh 'echo "Build the app"'
//
//            }
//        }
//        stage('Test'){
//            steps{
//                sh 'echo "Testing the app"'
////                sh "mvn verify -Dspring.profiles.active=test -Dmaven.test.failure.ignore=true"
////                junit 'target/surefire-reports/*.xml'
//            }
//        }
//        stage('Deploy'){
//            steps{
//                sh 'echo "Deploying the app"'
//            }
//        }
//    }
//    post {
//        success {
//            step([$class: 'GitHubCommitStatusSetter',
//                  statusResultSource: [$class: 'DefaultCommitStatusResultSource']
//            ])
//        }
//        failure {
//            step([$class: 'GitHubCommitStatusSetter',
//                  statusResultSource: [$class: 'DefaultCommitStatusResultSource']
//            ])
//        }
//    }
//}

//pipeline {
//    agent any
//
//    stages {
//        stage('Checkout') {
//            steps {
//                checkout scm
//            }
//        }
//
//        stage('Build') {
//            steps {
//                sh 'mvn clean package'
//            }
//        }
//
//        stage('Test') {
//            steps {
//                sh 'mvn test'
//            }
//        }
//    }
//
//    post {
//        success {
//            step([
//                    $class: 'GitHubCommitStatusSetter',
//                    statusResultSource: [$class: 'DefaultCommitStatus']
//            ])
//        }
//
//        failure {
//            step([
//                    $class: 'GitHubCommitStatusSetter',
//                    statusResultSource: [$class: 'DefaultCommitStatus']
//            ])
//        }
//    }
//}


pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'echo "Build the app"'
            }
        }
        stage('Test') {
            steps {
                sh 'echo "Testing the app"'
            }
        }
        stage('Deploy') {
            steps {
                sh 'echo "Deploying the app"'
            }
        }
    }
    post {
        success {
            script {
                setBuildStatus("Build succeeded", "SUCCESS")
            }
        }
        failure {
            script {
                setBuildStatus("Build failed", "FAILURE")
            }
        }
    }
}

void setBuildStatus(String message, String state) {
    step([
            $class: "GitHubCommitStatusSetter",
            reposSource: [
                    $class: "ManuallyEnteredRepositorySource",
                    url: "https://github.com/AWieczorek00/Supportly"  // Zaktualizuj URL swojego repozytorium
            ],
            contextSource: [
                    $class: "ManuallyEnteredCommitContextSource",
                    context: "ci/jenkins/build-status"
            ],
            errorHandlers: [
                    [$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]
            ],
            statusResultSource: [
                    $class: "ConditionalStatusResultSource",
                    results: [
                            [
                                    $class: "AnyBuildResult",
                                    message: message,
                                    state: state
                            ]
                    ]
            ]
    ])
}


